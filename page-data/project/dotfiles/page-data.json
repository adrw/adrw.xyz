{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/project/dotfiles","result":{"data":{"post":{"__typename":"MdxPost","slug":"/project/dotfiles","title":".files","date":"2017-04-12","tags":[{"name":"Projects","slug":"projects"},{"name":"Skill(Ansible)","slug":"skill-ansible"},{"name":"Skill(Bash, ZSH, Shell)","slug":"skill-bash-zsh-shell"}],"description":"Automated macOS and Linux provisioning with Ansible.","canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \".files\",\n  \"date\": \"2017-04-12T18:00:00.000Z\",\n  \"startdate\": \"2017-03-17T09:05:00.000Z\",\n  \"slug\": \"project/dotfiles\",\n  \"order\": 1,\n  \"categories\": [\"Project\", \"Experience\", \"Headline\"],\n  \"layout\": \"project\",\n  \"tags\": [\"Projects\", \"Skill(Ansible)\", \"Skill(Bash, ZSH, Shell)\"],\n  \"banner\": \"../images/2017-04-12-dotfiles/ansiblec.png\",\n  \"image2\": \"../images/2017-04-12-dotfiles/ansible-1000c.png\",\n  \"description\": \"Automated macOS and Linux provisioning with Ansible.\",\n  \"seo_title\": \".files - Automated macOS and Linux provisioning | Andrew Paradi Alexander\",\n  \"position\": \".files\",\n  \"company\": \"GitHub\",\n  \"summary\": \"- Automated macOS and Linux provisioning with Ansible and shell scripts\\n\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"I never wanted to manually configure my OS environment again.\")), mdx(\"h2\", null, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"https://github.com/adrw/.files\"\n  }, \"Check out the repo on GitHub.\")), mdx(\"p\", null, \"After years of having to set aside a day or two to setup a new computer or reconfigure my environment after a clean OS install, I wanted to find a better way.\"), mdx(\"p\", null, \"I started off with a simple shell script that copied my \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".tmux\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".vimrc\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".zshrc\"), \" files to my home directory and installed some \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Homebrew\"), \" packages.\"), mdx(\"p\", null, \"Then a colleague introduced me to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.ansible.com/\"\n  }, \"Ansible\"), \"...\"), mdx(\"p\", null, \"Ansible is a framework that structures the provisioning process for a new machine or clean OS with declarative YAML files.\"), mdx(\"p\", null, \"The basic components of Ansible are:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Inventory: the machine or OS that Ansible will run on.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Play: a unique, declared environment that will be installed on an Inventory.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Role: a single configuration task. Example tasks that each would be an independent role: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Install my Homebrew packages\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Configure my zsh\"), \", or \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Set my standard macOS defaults\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"(Optional) \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"bootstrap.sh\"), \": single script that can be triggered to provision a local machine. It likely will clone the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".files\"), \" repo, installs Ansible, and start the Ansible playbook.\")), mdx(\"p\", null, \"My \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/adrw/.files\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \".files\"), \" repo\"), \" holds my Ansible configuration, and all static scripts and files I need for a new machine. It works great on a clean macOS environment and I'll be expanding it to work on Linux soon.\"), mdx(\"p\", null, \"If you'd like to build your own, feel free to fork \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/adrw/.files\"\n  }, \"my repo\"), \" or check out any of the helpful resources and examples below!\"), mdx(\"h2\", null, \"Resources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.ansible.com/ansible/\"\n  }, \"Ansible docs\"), \" very thorough spec for all standard Ansible modules and functionality\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/drduh/macOS-Security-and-Privacy-Guide\"\n  }, \"macOS-Security-and-Privacy-Guide\"), \" - \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/drduh\"\n  }, \"@drduh\"), \" consolidates best practices from enterprise IT and government to secure macOS from many standard threat models\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/geerlingguy/mac-dev-playbook\"\n  }, \"mac-dev-playbook\"), \" - \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/geerlingguy\"\n  }, \"@geerlingguy\"), \" one of the best macOS Ansible playbooks I found, he also wrote many great Ansible Roles which you can use in your own playbook too\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/gpakosz/.tmux\"\n  }, \".tmux\"), \" - \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/gpakosz\"\n  }, \"@gpakosz\"), \" awesome tmux configuration file for terminal multiplexing (multiple shell instances in the same terminal session)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://gist.github.com/kevin-smets/8568070\"\n  }, \"iterm2-solarized\"), \" - \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/kevin-smets\"\n  }, \"@kevin-smets\"), \" really nice iTerm2 configuration with a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Dark-Solarized\"), \" theme, \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"oh-my-zsh\"), \", \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/zsh-users/zsh-autosuggestions#oh-my-zsh\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"zsh-autosuggestions\")), \" and \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/bhilburn/powerlevel9k\"\n  }, \"Powerlevel9k\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/mathiasbynens/dotfiles\"\n  }, \"dotfiles/.macos\"), \" - \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/mathiasbynens\"\n  }, \"@mathiasbynens\"), \" >900 lines of great common sense macOS defaults and configuration that you can easily clone and customize\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/kcrawford/dockutil\"\n  }, \"dockutil\"), \" - \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/kcrawford\"\n  }, \"@kcrawford\"), \" great shell script for customizing macOS dock items\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/ricbra/mac-dev-playbook\"\n  }, \"mac-dev-playbook\"), \" - \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/ricbra\"\n  }, \"@ricbra\"), \" another great example (this includes \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"dockutil\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/StevenBlack/hosts\"\n  }, \"hosts\"), \" - \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/StevenBlack\"\n  }, \"@StevenBlack\"), \" community built lists of undesirable domains that can be blocked using your \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/etc/hosts\"), \" file\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/karek314/macOS-home-call-drop\"\n  }, \"macOS-home-call-drop\"), \" - \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/karek314\"\n  }, \"@karek314\"), \" shell script that restricts macOS daemons and agents from \\\"phoning home\\\" to Cupertino\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/MagerValp/AutoDMG\"\n  }, \"AutoDMG\"), \" - \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/MagerValp\"\n  }, \"@MagerValp\"), \" simply macOS app that builds macOS install images for easy machine imaging\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/MagerValp/CreateUserPkg\"\n  }, \"CreateUserPkg\"), \" - \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/MagerValp\"\n  }, \"@MagerValp\"), \" macOS app that creates macOS pkg containing configuration for a macOS user account, can be included with an \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"AutoDMG\"), \" image\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"I never wanted to manually configure my OS environment again. Check out the repo on GitHub. After years of having to set aside a day or two…","timeToRead":2,"banner":{"childImageSharp":{"resize":{"src":"/static/4e30edbd91af5e3db3bc59def85758be/73f08/ansiblec.png"}}}}},"pageContext":{"slug":"/project/dotfiles","formatString":"YYYY-MM-DD"}},"staticQueryHashes":["318001574","3787687951","3787687951"]}